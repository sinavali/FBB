generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = "mysql://root:qwerty@localhost:3306/fbb_core?schema=public?connection_limit=10&pool_timeout=100"
}

model Setting {
    id           Int            @id @default(autoincrement())
    settingKey   String
    settingValue String
    parseTo      SettingParseTo

    @@index([id, settingKey])
}

model TimeMicro {
    id         Int           @id @default(autoincrement())
    type       TimeMicroType @default(Session)
    Session    Session?      @relation(fields: [sessionId], references: [id])
    sessionId  Int?
    WorkTime   WorkTime?     @relation(fields: [workTimeId], references: [id])
    workTimeId Int?
    start      Int
    end        Int?

    @@index([id, type, start, end])
}

model Session {
    id        Int         @id @default(autoincrement())
    title     String
    start     String
    end       String
    workTimes WorkTime[] // do not need
    micros    TimeMicro[]

    @@index([id, start, end])
}

model WorkTime {
    id        Int         @id @default(autoincrement())
    title     String
    start     String
    end       String
    session   Session?    @relation(fields: [sessionId], references: [id])
    sessionId Int?
    micros    TimeMicro[]

    @@index([id, start, end])
}

model Currency {
    id        Int        @id @default(autoincrement())
    name      String
    related   Currency[] @relation("Related")
    relatedTo Currency[] @relation("Related")

    @@index([id, name])
}

enum TimeMicroType {
    Session
    WorkTime
}

enum SettingParseTo {
    Int
    Float
    BigInt
    String
    Boolean
}

enum SignalStatus {
    signalFound
    signalFailed
    signalTriggered
    signalTriggeredStopLoss
    signalTriggeredTakeProfit
    signalCanceledByUser
    signalCanceledBySystem
}

enum PositionStatus {
    positionPlaced
    positionTriggered
    positionTriggeredStopLoss
    positionTriggeredTakeProfit
    positionCanceledByUser
    positionCanceledBySystem
}
